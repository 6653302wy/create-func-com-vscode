{"version":3,"sources":["webpack://create-func-com/./src/codeTemplate.ts","webpack://create-func-com/./src/createCom.ts","webpack://create-func-com/./src/createPage.ts","webpack://create-func-com/./src/extension.ts","webpack://create-func-com/./src/folderAndFileMaker.ts","webpack://create-func-com/./src/showInputBox.ts","webpack://create-func-com/external \"fs\"","webpack://create-func-com/external \"vscode\"","webpack://create-func-com/webpack/bootstrap","webpack://create-func-com/webpack/startup"],"names":["tsxTemplate","comName","cssTemplate","pageIndexTemplate","pageHtmlTemplate","folderPath","componenetName","createFolders","mkdirfolder","tsxFile","touchFile","cssFile","vscode","window","showInformationMessage","startCreateCom","uri","firstUpperCase","console","log","showInputBox","val","pageName","startCreatePage","path","htmlFile","context","component","commands","registerCommand","fsPath","page","subscriptions","push","cb","fs","existsSync","mkdir","err","fileName","content","Promise","resolve","writeFile","error","str","replace","toUpperCase","readFile","readFileSync","prompt","acceptCb","placeHolderStr","inputBox","createInputBox","placeholder","onDidAccept","value","hide","onDidHide","dispose","show","showPickBox","titleStr","optionItem","selectItem","pickBox","createQuickPick","title","items","onDidChangeActive","label","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"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","file":"extension.js","sourcesContent":["export const tsxTemplate = (comName: string): string => {\n  return `import { FunctionComponent, ReactElement } from 'react';\nimport styles from './styles.css';\n\nexport const ${comName}: FunctionComponent = (): ReactElement => {\n    return <div className={styles.container}>${comName}</div>;\n};\n${comName}.displayName = '${comName}';`;\n};\n\nexport const cssTemplate = (): string => {\n  return `.container {\n    background: #eee;\n}`;\n};\n\nexport const pageIndexTemplate = (): string => {\n  return `import { render } from 'react-dom';\nimport { App } from './components/App';\n      \nrender(<App />, document.getElementById('root'));`;\n};\n\nexport const pageHtmlTemplate = (): string => {\n  return `<!DOCTYPE html>\n<html lang=\"zh\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no\"\n        />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n        <meta name=\"format-detection\" content=\"telephone=no,date=no,address=no,email=no,url=no\" />\n        <!-- 添加开始时间 -->\n        <%= htmlWebpackPlugin.options.startTime %>\n        <title>新页面</title>\n    </head>\n    <body>\n        <div id=\"root\"></div>\n        \n        <!-- cnzz统计 -->\n        <%= htmlWebpackPlugin.options.cnzz %>\n        <!-- 载入servicework -->\n        <%= htmlWebpackPlugin.options.serviceWorker %>\n        <!-- 调试工具插件 -->\n        <%= htmlWebpackPlugin.options.eruda %>\n    </body>\n</html>\n  `;\n};\n","import * as vscode from \"vscode\";\nimport { cssTemplate, tsxTemplate } from \"./codeTemplate\";\nimport { firstUpperCase, mkdirfolder, touchFile } from \"./folderAndFileMaker\";\nimport { showInputBox } from \"./showInputBox\";\n\nlet folderPath = \"\";\nlet componenetName = \"testCom\";\n\nconst createCodeFiles = async () => {\n  const tsxFile = `${folderPath}/index.tsx`;\n  // 创建tsx文件\n  await touchFile(tsxFile, tsxTemplate(componenetName));\n  // 创建css文件\n  const cssFile = `${folderPath}/styles.css`;\n  await touchFile(cssFile, cssTemplate());\n\n  vscode.window.showInformationMessage(\"组件模板创建成功!\");\n};\n\n// 创建文件夹\nconst createFolders = () => {\n  if (folderPath) {\n    mkdirfolder(folderPath, () => {\n      // 创建一个assets文件夹\n      mkdirfolder(`${folderPath}/assets`, () => {\n        createCodeFiles();\n      });\n    });\n  }\n};\n\n/** 创建组件模板 */\nexport const startCreateCom = (uri: string, comName?: string) => {\n  // console.log(\"当前所选路径是===\", uri);\n  folderPath = uri;\n  if (comName) {\n    componenetName = firstUpperCase(comName);\n    folderPath += `/${componenetName}`;\n    console.log(\"组件路径 ===\", folderPath);\n\n    createFolders();\n  } else {\n    showInputBox(\n      \"请输入组件名\",\n      (val) => {\n        componenetName = firstUpperCase(val);\n        folderPath += `/${componenetName}`;\n        console.log(\"组件路径 ===\", folderPath);\n\n        createFolders();\n      },\n      \"建议格式：TestComponentName\"\n    );\n  }\n};\n","import * as vscode from \"vscode\";\nimport { pageHtmlTemplate, pageIndexTemplate } from \"./codeTemplate\";\nimport { startCreateCom } from \"./createCom\";\nimport { mkdirfolder, touchFile } from \"./folderAndFileMaker\";\nimport { showInputBox } from \"./showInputBox\";\n\nlet folderPath = \"\";\nlet pageName = \"testPage\";\nlet pageType = \"不需授权\";\n\nconst createFiles = async (path?: string) => {\n  const tsxFile = `${path}/index.tsx`;\n  const htmlFile = `${path}/index.html`;\n\n  if (pageType === \"不需授权\") {\n    // 创建tsx文件\n    await touchFile(tsxFile, pageIndexTemplate());\n    // 创建html文件\n    await touchFile(htmlFile, pageHtmlTemplate());\n\n    vscode.window.showInformationMessage(\"页面创建成功!\");\n    return;\n  }\n};\n\n// 创建文件夹\nconst createFolders = async () => {\n  if (folderPath) {\n    await mkdirfolder(folderPath);\n    await mkdirfolder(`${folderPath}/pages`);\n    await mkdirfolder(`${folderPath}/pages/index`);\n    createFiles(`${folderPath}/pages/index`);\n    mkdirfolder(`${folderPath}/pages/index/components`, () => {\n      startCreateCom(`${folderPath}/pages/index/components`, \"App\");\n    });\n    // 创建components文件夹\n    // mkdirfolder(folderPath, () => {\n    //   mkdirfolder(`${folderPath}/pages`, () => {\n    //     createFiles();\n    //     // 创建components文件夹\n    // mkdirfolder(`${folderPath}/components`, () => {\n    //   startCreateCom(`${folderPath}/components`, \"App\");\n    // });\n    //   });\n    // });\n  }\n};\n\nconst checkConfig = () => {\n  createFolders();\n  // const rootPath = vscode.workspace.workspaceFolders?.[0].uri.fsPath;\n  // const cf = readFile(`${rootPath}/.cfcrc.js`);\n  // console.log(\"cf: \", cf);\n  // if (!cf) {\n  //   console.log(\"没有配置文件，使用默认模板创建 \");\n  //   createFolders();\n  //   return;\n  // }\n\n  // 优先检查是否有option\n  // showPickBox(\"请选择页面类型\", (result: string) => {\n  //   pageType = result;\n  //   createFolders();\n  // });\n};\n\n/** 创建页面模板 */\nexport const startCreatePage = (uri: string) => {\n  // console.log(\"当前所选路径是===\", uri);\n  folderPath = uri;\n  showInputBox(\n    \"请输入页面名\",\n    (val) => {\n      pageName = val;\n      folderPath += `/${pageName}`;\n      console.log(\"页面路径 ===\", folderPath);\n\n      checkConfig();\n\n      // 询问页面类型\n      // showPickBox(\"请选择页面类型\", (result: string) => {\n      //   pageType = result;\n      //   createFolders();\n      // });\n    },\n    \"建议格式：test-page-name\"\n  );\n};\n","import * as vscode from \"vscode\";\nimport { startCreateCom } from \"./createCom\";\nimport { startCreatePage } from \"./createPage\";\n\nexport function activate(context: vscode.ExtensionContext) {\n  const component = vscode.commands.registerCommand(\n    \"create-func-com.component\",\n    (uri) => {\n      // 创建函数式组件模板文件夹\n      startCreateCom(uri.fsPath);\n    }\n  );\n  const page = vscode.commands.registerCommand(\n    \"create-func-com.page\",\n    (uri) => {\n      // 创建页面件模板文件夹\n      startCreatePage(uri.fsPath);\n    }\n  );\n\n  context.subscriptions.push(component);\n  context.subscriptions.push(page);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","import * as fs from \"fs\";\n\n/**\n * 创建文件夹\n * @param path 路径\n * @param cb 回调\n */\nexport const mkdirfolder = (path: string, cb?: () => void) => {\n  console.log(\"创建目录...\", path);\n  if (!fs.existsSync(path)) {\n    fs.mkdir(path, (err) => {\n      if (err) {\n        console.log(err);\n        return false;\n      }\n      console.log(`${path} 目录创建成功!`);\n\n      cb?.();\n    });\n  } else {\n    console.log(`${path} 目录已存在`);\n\n    cb?.();\n  }\n};\n\n/**\n * 新建模板文件\n * @param fileName 文件名路径\n * @param content 文件内容\n */\nexport const touchFile = (fileName: string, content: string) => {\n  return new Promise<void>((resolve) => {\n    if (!fs.existsSync(fileName)) {\n      fs.writeFile(fileName, content, (err) => {\n        if (err) {\n          return console.error(err);\n        }\n        console.log(`${fileName}文件创建成功`);\n        resolve();\n      });\n    } else {\n      resolve();\n    }\n  });\n};\n\n/**\n * 首字母大写\n * */\nexport const firstUpperCase = (str: string) => {\n  return str.replace(str[0], str[0].toUpperCase());\n};\n\n/**\n * 首字母大写\n * */\nexport const readFile = (path: string): string => {\n  return fs.readFileSync(path, \"utf8\");\n};\n","import * as vscode from \"vscode\";\n\nexport const showInputBox = (\n  prompt: string,\n  acceptCb: (result: string) => void,\n  placeHolderStr?: string\n) => {\n  const inputBox = vscode.window.createInputBox();\n  inputBox.prompt = prompt;\n  inputBox.placeholder = placeHolderStr || \"\";\n\n  inputBox.onDidAccept(() => {\n    const val = inputBox.value;\n    // console.log(\"输入的内容====\", val);\n    inputBox.hide();\n    acceptCb(val);\n  });\n\n  inputBox.onDidHide(() => {\n    inputBox.dispose();\n  });\n\n  inputBox.show();\n};\n\nexport interface Option {\n  label: string;\n  description: string;\n}\nexport const showPickBox = (\n  titleStr: string,\n  optionItem: Option[],\n  acceptCb: (result: string) => void\n) => {\n  let selectItem: vscode.QuickPickItem;\n\n  const pickBox = vscode.window.createQuickPick();\n  pickBox.title = titleStr;\n  pickBox.items = optionItem;\n  // pickBox.items = [\n  //   { label: \"不需授权\", description: \"不需要授权的普通页面\" },\n  //   { label: \"需授权\", description: \"需要授权的普通页面\" },\n  //   { label: \"落地页\", description: \"落地页模板\" },\n  // ];\n  pickBox.onDidChangeActive((items) => {\n    if (items[0]) {\n      selectItem = items[0];\n    }\n  });\n  pickBox.onDidAccept(() => {\n    if (selectItem) {\n      acceptCb(selectItem.label);\n      pickBox.hide();\n    }\n  });\n  pickBox.onDidHide(() => {\n    pickBox.dispose();\n  });\n\n  pickBox.show();\n};\n","module.exports = require(\"fs\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(112);\n"],"sourceRoot":""}